
pub struct TestDiffs
{
    data: string[];
};

pub fn serialize(diffs: TestDiffs)
{
    mut deduped = diffs.data;

    deduped.sort(|a, b| a <> b < 0);
    for (mut i = deduped.len; i --> 1; )
        if (deduped[i - 1] == deduped[i])
            deduped.splice(i, 1);

    return deduped.join();
}

pub fn set_next(ref diffs: TestDiffs, key: string, val: string)
{
    diffs.data ~= key ~ "\n-----\n" ~ val ~ "\n=====\n";
}

pub fn append(ref diffs: TestDiffs, other: TestDiffs)
{
    diffs.data ~= other.data;
}
